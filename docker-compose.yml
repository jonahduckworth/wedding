version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: wedding
      POSTGRES_USER: wedding
      POSTGRES_PASSWORD: wedding
    ports:
      - "2026:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./api/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wedding"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: postgres://wedding:wedding@postgres:5432/wedding
      PORT: 8080
      RESEND_API_KEY: ${RESEND_API_KEY}
      CORS_ORIGIN: http://localhost:3000
      FRONTEND_URL: http://localhost:3000
      RUST_LOG: debug
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      VITE_API_URL: http://localhost:8080
    depends_on:
      - api

volumes:
  postgres_data:
